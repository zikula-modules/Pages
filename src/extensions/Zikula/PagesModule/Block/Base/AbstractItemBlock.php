<?php

/**
 * Pages.
 *
 * @copyright Zikula Team (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Zikula Team <info@ziku.la>.
 *
 * @see https://ziku.la
 *
 * @version Generated by ModuleStudio 1.5.0 (https://modulestudio.de).
 */

declare(strict_types=1);

namespace Zikula\PagesModule\Block\Base;

use Symfony\Component\HttpKernel\Controller\ControllerReference;
use Symfony\Component\HttpKernel\Fragment\FragmentHandler;
use Zikula\BlocksModule\AbstractBlockHandler;
use Zikula\PagesModule\Block\Form\Type\ItemBlockType;
use Zikula\PagesModule\Helper\ControllerHelper;

/**
 * Generic item detail block base class.
 */
abstract class AbstractItemBlock extends AbstractBlockHandler
{
    /**
     * @var ControllerHelper
     */
    protected $controllerHelper;
    
    /**
     * @var FragmentHandler
     */
    protected $fragmentHandler;
    
    public function getType(): string
    {
        return $this->trans('Pages detail');
    }
    
    public function display(array $properties = []): string
    {
        // only show block content if the user has the required permissions
        if (!$this->hasPermission('ZikulaPagesModule:ItemBlock:', $properties['title'] . '::', ACCESS_OVERVIEW)) {
            return '';
        }
    
        if (null === $properties['id'] || empty($properties['id'])) {
            return '';
        }
    
        $contextArgs = ['name' => 'detail'];
        $allowedObjectTypes = $this->controllerHelper->getObjectTypes('block', $contextArgs);
        if (
            !isset($properties['objectType'])
            || !in_array($properties['objectType'], $allowedObjectTypes, true)
        ) {
            $properties['objectType'] = $this->controllerHelper->getDefaultObjectType('block', $contextArgs);
        }
    
        $controllerReference = new ControllerReference(
            'Zikula\PagesModule\Controller\ExternalController::display',
            $this->getDisplayArguments($properties),
            [
                'template' => $properties['customTemplate']
            ]
        );
    
        return $this->fragmentHandler->render($controllerReference);
    }
    
    /**
     * Returns common arguments for displaying the selected object using the external controller.
     */
    protected function getDisplayArguments(array $properties = []): array
    {
        return [
            'objectType' => $properties['objectType'],
            'id' => $properties['id'],
            'source' => 'block',
            'displayMode' => 'embed',
        ];
    }
    
    public function getFormClassName(): string
    {
        return ItemBlockType::class;
    }
    
    public function getFormOptions(): array
    {
        $objectType = 'page';
    
        return [
            'object_type' => $objectType,
        ];
    }
    
    public function getFormTemplate(): string
    {
        return '@ZikulaPagesModule/Block/item_modify.html.twig';
    }
    
    public function getPropertyDefaults(): array
    {
        return [
            'objectType' => 'page',
            'id' => null,
            'template' => 'item_display.html.twig',
            'customTemplate' => null,
        ];
    }
    
    /**
     * @required
     */
    public function setControllerHelper(ControllerHelper $controllerHelper): void
    {
        $this->controllerHelper = $controllerHelper;
    }
    
    /**
     * @required
     */
    public function setFragmentHandler(FragmentHandler $fragmentHandler): void
    {
        $this->fragmentHandler = $fragmentHandler;
    }
}
